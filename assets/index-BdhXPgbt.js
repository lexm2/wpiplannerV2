(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const i of r)if(i.type==="childList")for(const n of i.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&s(n)}).observe(document,{childList:!0,subtree:!0});function t(r){const i={};return r.integrity&&(i.integrity=r.integrity),r.referrerPolicy&&(i.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?i.credentials="include":r.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(r){if(r.ep)return;r.ep=!0;const i=t(r);fetch(r.href,i)}})();var c=(u=>(u.MONDAY="mon",u.TUESDAY="tue",u.WEDNESDAY="wed",u.THURSDAY="thu",u.FRIDAY="fri",u.SATURDAY="sat",u.SUNDAY="sun",u))(c||{});const S=class S{constructor(){this.scheduleDB=null}async loadCourseData(){try{console.log("Loading course data...");const e=await this.fetchFreshData();return this.scheduleDB=e,e}catch(e){throw console.error("Failed to load course data:",e),new Error("No course data available")}}async fetchFreshData(){console.log("Fetching course data from local static file...");const e=await fetch(S.WPI_COURSE_DATA_URL,{method:"GET",headers:{Accept:"application/json"},cache:"no-cache"});if(!e.ok)throw new Error(`Failed to fetch course data: ${e.status} ${e.statusText}`);const t=await e.json();return this.parseJSONData(t)}parseJSONData(e){console.log("Parsing JSON data...");const t={departments:[],generated:new Date().toISOString()};if(!e.Report_Entry||!Array.isArray(e.Report_Entry))throw console.error("Invalid JSON data structure:",e),new Error("Invalid JSON data structure");console.log(`Processing ${e.Report_Entry.length} course entries...`);const s=new Map;let r=0;for(const i of e.Report_Entry)try{this.processJSONEntry(i,s),r++}catch(n){console.warn("Failed to process entry:",i,n)}return t.departments=Array.from(s.values()),console.log(`Successfully processed ${r}/${e.Report_Entry.length} entries`),console.log(`Loaded ${t.departments.length} departments with course data`),t}processJSONEntry(e,t){const r=(e.Course_Title||"").match(/^([A-Z]+)\s+(\d+)\s*-\s*(.+)$/);if(!r)return;const[,i,n,o]=r,a=e.Academic_Units||e.Subject||i,l=this.getOrCreateDepartment(i,a,t),p=this.getOrCreateCourse(i,n,o,e,l),C=this.createSectionFromEntry(e,p);if(e.Meeting_Patterns&&e.Locations&&e.Instructors){const h=this.createPeriodFromEntry(e,C);C.periods.push(h)}p.sections.push(C)}getOrCreateDepartment(e,t,s){let r=s.get(e);return r||(r={abbreviation:e,name:t,courses:[]},s.set(e,r)),r}getOrCreateCourse(e,t,s,r,i){const n=`${e}-${t}`;let o=i.courses.find(a=>a.id===n);return o||(o={id:n,number:t,name:s,description:this.stripHtml(r.Course_Description||""),department:i,sections:[],minCredits:parseFloat(r.Credits||"3"),maxCredits:parseFloat(r.Credits||"3")},i.courses.push(o)),o}createSectionFromEntry(e,t){const s=e.Course_Section?.match(/([A-Z]+\s+\d+)-([A-Z0-9]+)/),r=s?s[2]:"",[i,n]=(e.Enrolled_Capacity||"0/0").split("/").map(l=>parseInt(l)||0),[o,a]=(e.Waitlist_Waitlist_Capacity||"0/0").split("/").map(l=>parseInt(l)||0);return{crn:0,number:r,seats:n,seatsAvailable:n-i,actualWaitlist:o,maxWaitlist:a,note:e.Section_Status==="Waitlist"?"Waitlist Available":void 0,description:this.stripHtml(e.Course_Section_Description||""),term:e.Offering_Period||"",periods:[]}}createPeriodFromEntry(e,t){const[s,r]=(e.Enrolled_Capacity||"0/0").split("/").map(o=>parseInt(o)||0),[i,n]=(e.Waitlist_Waitlist_Capacity||"0/0").split("/").map(o=>parseInt(o)||0);return{type:e.Instructional_Format||"Lecture",professor:e.Instructors||"",professorEmail:void 0,startTime:this.parseTimeFromPattern(e.Meeting_Patterns,!0),endTime:this.parseTimeFromPattern(e.Meeting_Patterns,!1),building:this.extractBuilding(e.Locations),room:this.extractRoom(e.Locations),location:e.Locations,seats:r,seatsAvailable:r-s,actualWaitlist:i,maxWaitlist:n,days:this.parseDaysFromPattern(e.Meeting_Day_Patterns||""),specificSection:t.number}}stripHtml(e){return e.replace(/<[^>]*>/g,"").replace(/&[^;]+;/g," ").trim()}extractBuilding(e){const t=e.match(/^([^0-9]+)/);return t?t[1].trim():""}extractRoom(e){const t=e.match(/([0-9]+[A-Z]*)$/);return t?t[1]:""}parseTimeFromPattern(e,t){const s=e.match(/(\d{1,2}:\d{2}\s*[AP]M)\s*-\s*(\d{1,2}:\d{2}\s*[AP]M)/);if(!s)return{hours:0,minutes:0,displayTime:"TBD"};const r=t?s[1]:s[2];return this.parseTime(r)}parseDaysFromPattern(e){return this.parseDays(e)}parseTime(e){if(!e||e==="?")return{hours:0,minutes:0,displayTime:"TBD"};const t=e.match(/(\d{1,2}):(\d{2})(AM|PM)/i);if(!t)return{hours:0,minutes:0,displayTime:e};let s=parseInt(t[1]);const r=parseInt(t[2]),i=t[3].toUpperCase();return i==="PM"&&s!==12?s+=12:i==="AM"&&s===12&&(s=0),{hours:s,minutes:r,displayTime:e}}parseDays(e){const t=new Set;if(!e||e==="?")return t;const s={M:c.MONDAY,T:c.TUESDAY,W:c.WEDNESDAY,R:c.THURSDAY,F:c.FRIDAY,S:c.SATURDAY,U:c.SUNDAY},r={mon:c.MONDAY,tue:c.TUESDAY,wed:c.WEDNESDAY,thu:c.THURSDAY,fri:c.FRIDAY,sat:c.SATURDAY,sun:c.SUNDAY};if(e.length<=7&&/^[MTWRFSU-]+$/.test(e))for(const i of e.replace(/-/g,""))s[i]&&t.add(s[i]);else{const i=e.split(",").map(n=>n.trim().toLowerCase());for(const n of i)r[n]&&t.add(r[n])}return t}getCachedData(){try{const e=localStorage.getItem(S.LOCAL_STORAGE_KEY);return e?JSON.parse(e).scheduleDB:null}catch(e){return console.warn("Failed to parse cached course data:",e),null}}cacheData(e){try{const t={scheduleDB:e,timestamp:Date.now()};localStorage.setItem(S.LOCAL_STORAGE_KEY,JSON.stringify(t)),console.log("Course data cached successfully")}catch(t){console.warn("Failed to cache course data:",t)}}isCacheExpired(){try{const e=localStorage.getItem(S.LOCAL_STORAGE_KEY);if(!e)return!0;const t=JSON.parse(e),s=Date.now()-t.timestamp,r=S.CACHE_EXPIRY_HOURS*60*60*1e3;return s>r}catch{return!0}}getScheduleDB(){return this.scheduleDB}searchCourses(e,t){if(!this.scheduleDB)return[];const s=[];for(const i of this.scheduleDB.departments)t&&t.length>0&&!t.includes(i.abbreviation.toLowerCase())||s.push(...i.courses);if(!e.trim())return s;const r=e.toLowerCase();return s.filter(i=>i.name.toLowerCase().includes(r)||i.number.toLowerCase().includes(r)||i.id.toLowerCase().includes(r)||i.department.abbreviation.toLowerCase().includes(r))}getAllDepartments(){return this.scheduleDB?.departments||[]}};S.WPI_COURSE_DATA_URL="./course-data.json",S.LOCAL_STORAGE_KEY="wpi-course-data",S.CACHE_EXPIRY_HOURS=1;let M=S;const I="WPI Classic",P="wpi-classic",H="Traditional WPI colors and styling",x={primary:"#ac2b37",primaryHover:"#8e2329",primaryLight:"#d4424f",secondary:"#f5f5f7",secondaryHover:"#e5e5e7",background:"#f5f5f7",backgroundAlt:"#ffffff",surface:"#ffffff",surfaceHover:"#fbfbfd",text:"#1d1d1f",textSecondary:"#86868b",textInverse:"#ffffff",border:"#e5e5e7",borderHover:"#d2d2d7",success:"#30d158",warning:"#ff9500",error:"#d32f2f",info:"#007aff"},B={fontFamily:"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif",fontFamilyMono:"'SF Mono', Monaco, 'Cascadia Code', monospace"},F={baseUnit:"1rem",headerHeight:"64px",sidebarWidth:"280px",rightPanelWidth:"320px"},N={borderRadius:"6px",borderRadiusLarge:"8px",shadow:"0 1px 3px rgba(0,0,0,0.1)",shadowHover:"0 2px 8px rgba(172, 43, 55, 0.1)",transition:"all 0.2s ease"},U={name:I,id:P,description:H,colors:x,typography:B,spacing:F,effects:N},Y="WPI Dark",k="wpi-dark",_="Dark mode theme with WPI accent colors",W={primary:"#d4424f",primaryHover:"#ac2b37",primaryLight:"#e85a66",secondary:"#2c2c2e",secondaryHover:"#3a3a3c",background:"#1c1c1e",backgroundAlt:"#2c2c2e",surface:"#2c2c2e",surfaceHover:"#3a3a3c",text:"#ffffff",textSecondary:"#98989d",textInverse:"#1d1d1f",border:"#3a3a3c",borderHover:"#48484a",success:"#30d158",warning:"#ff9f0a",error:"#ff453a",info:"#64d2ff"},V={fontFamily:"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif",fontFamilyMono:"'SF Mono', Monaco, 'Cascadia Code', monospace"},G={baseUnit:"1rem",headerHeight:"64px",sidebarWidth:"280px",rightPanelWidth:"320px"},q={borderRadius:"6px",borderRadiusLarge:"8px",shadow:"0 2px 8px rgba(0,0,0,0.3)",shadowHover:"0 4px 16px rgba(212, 66, 79, 0.2)",transition:"all 0.2s ease"},J={name:Y,id:k,description:_,colors:W,typography:V,spacing:G,effects:q},K="WPI Light",z="wpi-light",j="Clean light theme with softer WPI colors",Z={primary:"#b8394a",primaryHover:"#9c2f3d",primaryLight:"#d4556b",secondary:"#f8f8fa",secondaryHover:"#ededef",background:"#ffffff",backgroundAlt:"#f8f8fa",surface:"#ffffff",surfaceHover:"#f8f8fa",text:"#2c2c2e",textSecondary:"#6d6d70",textInverse:"#ffffff",border:"#d1d1d6",borderHover:"#c7c7cc",success:"#28a745",warning:"#fd7e14",error:"#dc3545",info:"#17a2b8"},X={fontFamily:"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif",fontFamilyMono:"'SF Mono', Monaco, 'Cascadia Code', monospace"},Q={baseUnit:"1rem",headerHeight:"64px",sidebarWidth:"280px",rightPanelWidth:"320px"},ee={borderRadius:"8px",borderRadiusLarge:"12px",shadow:"0 1px 4px rgba(0,0,0,0.08)",shadowHover:"0 3px 12px rgba(184, 57, 74, 0.15)",transition:"all 0.2s ease"},te={name:K,id:z,description:j,colors:Z,typography:X,spacing:Q,effects:ee},se="High Contrast",re="high-contrast",ie="Accessibility-focused high contrast theme",ne={primary:"#000000",primaryHover:"#333333",primaryLight:"#666666",secondary:"#ffffff",secondaryHover:"#f0f0f0",background:"#ffffff",backgroundAlt:"#f8f8f8",surface:"#ffffff",surfaceHover:"#f0f0f0",text:"#000000",textSecondary:"#444444",textInverse:"#ffffff",border:"#000000",borderHover:"#333333",success:"#006600",warning:"#cc6600",error:"#cc0000",info:"#0066cc"},oe={fontFamily:"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif",fontFamilyMono:"'SF Mono', Monaco, 'Cascadia Code', monospace"},ae={baseUnit:"1rem",headerHeight:"64px",sidebarWidth:"280px",rightPanelWidth:"320px"},ce={borderRadius:"2px",borderRadiusLarge:"4px",shadow:"0 0 0 2px #000000",shadowHover:"0 0 0 3px #000000",transition:"all 0.1s ease"},le={name:se,id:re,description:ie,colors:ne,typography:oe,spacing:ae,effects:ce};class w{constructor(){this.currentTheme="wpi-classic",this.themes=new Map,this.listeners=new Set,this.storageKey="wpi-planner-theme",this.initializeThemes(),this.loadSavedTheme()}static getInstance(){return w.instance||(w.instance=new w),w.instance}initializeThemes(){this.registerTheme(U),this.registerTheme(J),this.registerTheme(te),this.registerTheme(le)}loadSavedTheme(){try{const e=localStorage.getItem(this.storageKey);e&&this.themes.has(e)&&(this.currentTheme=e)}catch(e){console.warn("Failed to load saved theme preference:",e)}this.applyTheme(this.currentTheme)}registerTheme(e){if(!this.isValidTheme(e)){console.error("Invalid theme definition:",e);return}this.themes.set(e.id,e)}isValidTheme(e){return e&&typeof e.name=="string"&&typeof e.id=="string"&&typeof e.description=="string"&&e.colors&&e.typography&&e.spacing&&e.effects}getAvailableThemes(){return Array.from(this.themes.values())}getCurrentTheme(){return this.themes.get(this.currentTheme)||null}getCurrentThemeId(){return this.currentTheme}setTheme(e){if(!this.themes.has(e))return console.error(`Theme '${e}' not found`),!1;const t=this.currentTheme,s=e,r=this.themes.get(e);this.currentTheme=e,this.applyTheme(e),this.saveThemePreference(e);const i={oldTheme:t,newTheme:s,themeDefinition:r};return this.notifyListeners(i),!0}applyTheme(e){const t=this.themes.get(e);if(!t)return;const s=document.documentElement;Object.entries(t.colors).forEach(([r,i])=>{s.style.setProperty(`--color-${this.kebabCase(r)}`,i)}),Object.entries(t.typography).forEach(([r,i])=>{s.style.setProperty(`--font-${this.kebabCase(r)}`,i)}),Object.entries(t.spacing).forEach(([r,i])=>{s.style.setProperty(`--spacing-${this.kebabCase(r)}`,i)}),Object.entries(t.effects).forEach(([r,i])=>{s.style.setProperty(`--effect-${this.kebabCase(r)}`,i)}),document.body.className=document.body.className.replace(/theme-[\w-]+/g,"").trim(),document.body.classList.add(`theme-${e}`)}kebabCase(e){return e.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase()}saveThemePreference(e){try{localStorage.setItem(this.storageKey,e)}catch(t){console.warn("Failed to save theme preference:",t)}}detectSystemPreference(){if(typeof window<"u"&&window.matchMedia){if(window.matchMedia("(prefers-color-scheme: dark)").matches)return"wpi-dark";if(window.matchMedia("(prefers-contrast: high)").matches)return"high-contrast"}return"wpi-classic"}useSystemPreference(){const e=this.detectSystemPreference();return this.setTheme(e)}onThemeChange(e){this.listeners.add(e)}offThemeChange(e){this.listeners.delete(e)}notifyListeners(e){this.listeners.forEach(t=>{try{t(e)}catch(s){console.error("Error in theme change listener:",s)}})}previewTheme(e){return this.themes.has(e)?(this.applyTheme(e),!0):!1}resetToCurrentTheme(){this.applyTheme(this.currentTheme)}exportCurrentTheme(){const e=this.getCurrentTheme();if(!e)throw new Error("No current theme to export");return JSON.stringify(e,null,2)}importTheme(e){try{const t=JSON.parse(e);return this.isValidTheme(t)?(this.registerTheme(t),!0):!1}catch(t){return console.error("Failed to import theme:",t),!1}}getThemeById(e){return this.themes.get(e)||null}hasTheme(e){return this.themes.has(e)}removeTheme(e){return["wpi-classic","wpi-dark","wpi-light","high-contrast"].includes(e)?(console.warn(`Cannot remove built-in theme: ${e}`),!1):(this.currentTheme===e&&this.setTheme("wpi-classic"),this.themes.delete(e))}}const m=class m{constructor(){this.replacer=(e,t)=>t instanceof Set?{__type:"Set",value:[...t]}:e==="department"&&t&&t.courses?{abbreviation:t.abbreviation,name:t.name}:t,this.reviver=(e,t)=>typeof t=="object"&&t!==null&&t.__type==="Set"?new Set(t.value):t}saveUserState(e){this.handleStorageOperation(()=>{const t=JSON.stringify(e,this.replacer);localStorage.setItem(m.STORAGE_KEYS.USER_STATE,t)},"Failed to save user state")}loadUserState(){return this.handleStorageOperation(()=>{const e=localStorage.getItem(m.STORAGE_KEYS.USER_STATE);return e?JSON.parse(e,this.reviver):null},"Failed to load user state",null)}saveSchedule(e){this.handleStorageOperation(()=>{const t=this.loadAllSchedules(),s=t.findIndex(i=>i.id===e.id);s>=0?t[s]=e:t.push(e);const r=JSON.stringify(t,this.replacer);localStorage.setItem(m.STORAGE_KEYS.SCHEDULES,r)},"Failed to save schedule")}loadSchedule(e){try{return this.loadAllSchedules().find(s=>s.id===e)||null}catch(t){return console.warn("Failed to load schedule:",t),null}}loadAllSchedules(){return this.handleStorageOperation(()=>{const e=localStorage.getItem(m.STORAGE_KEYS.SCHEDULES);return e?JSON.parse(e,this.reviver):[]},"Failed to load schedules",[])}deleteSchedule(e){try{const s=this.loadAllSchedules().filter(r=>r.id!==e);localStorage.setItem(m.STORAGE_KEYS.SCHEDULES,JSON.stringify(s))}catch(t){console.warn("Failed to delete schedule:",t)}}savePreferences(e){this.handleStorageOperation(()=>{const t=JSON.stringify(e,this.replacer);localStorage.setItem(m.STORAGE_KEYS.PREFERENCES,t)},"Failed to save preferences")}loadPreferences(){return this.handleStorageOperation(()=>{const e=localStorage.getItem(m.STORAGE_KEYS.PREFERENCES);return e?JSON.parse(e,this.reviver):this.getDefaultPreferences()},"Failed to load preferences",this.getDefaultPreferences())}getDefaultPreferences(){return{preferredTimeRange:{startTime:{hours:8,minutes:0},endTime:{hours:18,minutes:0}},preferredDays:new Set(["mon","tue","wed","thu","fri"]),avoidBackToBackClasses:!1,theme:"wpi-classic"}}clearAllData(){try{Object.values(m.STORAGE_KEYS).forEach(e=>{localStorage.removeItem(e)})}catch(e){console.warn("Failed to clear storage:",e)}}exportData(){const e=this.loadUserState(),t=this.loadAllSchedules(),s=this.loadPreferences(),r={version:"1.0",timestamp:new Date().toISOString(),state:e,schedules:t,preferences:s};return JSON.stringify(r,null,2)}importData(e){try{const t=JSON.parse(e);return t.state&&this.saveUserState(t.state),t.preferences&&this.savePreferences(t.preferences),t.schedules&&t.schedules.forEach(s=>{this.saveSchedule(s)}),!0}catch(t){return console.error("Failed to import data:",t),!1}}handleStorageOperation(e,t,s){try{return e()}catch(r){return console.warn(`${t}:`,r),s}}saveThemePreference(e){try{localStorage.setItem(m.STORAGE_KEYS.THEME,e)}catch(t){console.warn("Failed to save theme preference:",t)}}loadThemePreference(){try{return localStorage.getItem(m.STORAGE_KEYS.THEME)||"wpi-classic"}catch(e){return console.warn("Failed to load theme preference:",e),"wpi-classic"}}saveSelectedCourses(e){this.handleStorageOperation(()=>{const t=JSON.stringify(e,this.replacer);localStorage.setItem(m.STORAGE_KEYS.SELECTED_COURSES,t)},"Failed to save selected courses")}loadSelectedCourses(){return this.handleStorageOperation(()=>{const e=localStorage.getItem(m.STORAGE_KEYS.SELECTED_COURSES);return e?JSON.parse(e,this.reviver):[]},"Failed to load selected courses",[])}clearSelectedCourses(){try{localStorage.removeItem(m.STORAGE_KEYS.SELECTED_COURSES)}catch(e){console.warn("Failed to clear selected courses:",e)}}};m.STORAGE_KEYS={USER_STATE:"wpi-planner-user-state",PREFERENCES:"wpi-planner-preferences",SCHEDULES:"wpi-planner-schedules",SELECTED_COURSES:"wpi-planner-selected-courses",THEME:"wpi-planner-theme"};let L=m;class de{constructor(){this.dropdownElement=null,this.optionsElement=null,this.currentThemeNameElement=null,this.isOpen=!1,this.themeManager=w.getInstance(),this.storageManager=new L,this.init()}init(){this.setupElements(),this.loadSavedTheme(),this.setupEventListeners(),this.renderThemeOptions()}setupElements(){this.dropdownElement=document.getElementById("theme-dropdown"),this.optionsElement=document.getElementById("theme-options"),this.currentThemeNameElement=document.getElementById("current-theme-name")}loadSavedTheme(){const e=this.storageManager.loadThemePreference();this.themeManager.setTheme(e),this.updateCurrentThemeDisplay()}setupEventListeners(){!this.dropdownElement||!this.optionsElement||(this.dropdownElement.addEventListener("click",e=>{e.stopPropagation(),this.toggleDropdown()}),document.addEventListener("click",()=>{this.closeDropdown()}),this.optionsElement.addEventListener("click",e=>{e.stopPropagation()}))}toggleDropdown(){this.isOpen?this.closeDropdown():this.openDropdown()}openDropdown(){!this.dropdownElement||!this.optionsElement||(this.isOpen=!0,this.dropdownElement.classList.add("open"),this.optionsElement.classList.add("show"))}closeDropdown(){!this.dropdownElement||!this.optionsElement||(this.isOpen=!1,this.dropdownElement.classList.remove("open"),this.optionsElement.classList.remove("show"))}renderThemeOptions(){if(!this.optionsElement)return;const e=this.themeManager.getAvailableThemes(),t=this.themeManager.getCurrentThemeId();let s="";e.forEach(r=>{const i=r.id===t;s+=`
                <div class="theme-option ${i?"active":""}" data-theme-id="${r.id}">
                    <div class="theme-option-name">${r.name}</div>
                    <div class="theme-option-description">${r.description}</div>
                </div>
            `}),this.optionsElement.innerHTML=s,this.optionsElement.querySelectorAll(".theme-option").forEach(r=>{r.addEventListener("click",()=>{const i=r.dataset.themeId;i&&this.selectTheme(i)})})}selectTheme(e){this.themeManager.setTheme(e)&&(this.storageManager.saveThemePreference(e),this.updateCurrentThemeDisplay(),this.updateActiveOption(e),this.closeDropdown())}updateCurrentThemeDisplay(){if(!this.currentThemeNameElement)return;const e=this.themeManager.getCurrentTheme();e&&(this.currentThemeNameElement.textContent=e.name)}updateActiveOption(e){if(!this.optionsElement)return;this.optionsElement.querySelectorAll(".theme-option").forEach(s=>{s.classList.remove("active")});const t=this.optionsElement.querySelector(`[data-theme-id="${e}"]`);t&&t.classList.add("active")}refresh(){this.renderThemeOptions(),this.updateCurrentThemeDisplay()}setTheme(e){this.selectTheme(e)}}class ue{constructor(){this.selectedCourses=new Map,this.listeners=new Set}addCourse(e,t=!1){const s={course:e,selectedSection:null,isRequired:t};this.selectedCourses.set(e.id,s),this.notifyListeners()}removeCourse(e){this.selectedCourses.delete(e),this.notifyListeners()}getSelectedCourses(){return Array.from(this.selectedCourses.values())}getSelectedCourse(e){return this.selectedCourses.get(e)}isSelected(e){return this.selectedCourses.has(e)}getAvailableSections(e){const t=this.selectedCourses.get(e);return this.validateCourseExists(e,t)?t.course.sections:[]}clearAll(){this.selectedCourses.clear(),this.notifyListeners()}onSelectionChange(e){this.listeners.add(e)}offSelectionChange(e){this.listeners.delete(e)}setSelectedSection(e,t){const s=this.selectedCourses.get(e);this.validateCourseExists(e,s)&&(s.selectedSection=t,this.notifyListeners())}getSelectedSection(e){return this.selectedCourses.get(e)?.selectedSection||null}loadSelectedCourses(e){this.selectedCourses.clear(),e.forEach(t=>{this.selectedCourses.set(t.course.id,t)}),this.notifyListeners()}validateCourseExists(e,t){return t?!0:(console.warn(`Course ${e} not found in selected courses`),!1)}notifyListeners(){const e=this.getSelectedCourses();this.listeners.forEach(t=>t(e))}}class T{static isValidCourse(e){return e&&typeof e.id=="string"&&typeof e.number=="string"&&typeof e.name=="string"&&typeof e.description=="string"&&this.isValidDepartment(e.department)&&Array.isArray(e.sections)&&e.sections.every(t=>this.isValidSection(t))&&typeof e.minCredits=="number"&&typeof e.maxCredits=="number"}static isValidDepartment(e){return e&&typeof e.abbreviation=="string"&&typeof e.name=="string"&&Array.isArray(e.courses)}static isValidSection(e){return e&&typeof e.crn=="number"&&typeof e.number=="string"&&typeof e.seats=="number"&&typeof e.seatsAvailable=="number"&&typeof e.actualWaitlist=="number"&&typeof e.maxWaitlist=="number"&&typeof e.description=="string"&&typeof e.term=="string"&&Array.isArray(e.periods)&&e.periods.every(t=>this.isValidPeriod(t))}static isValidPeriod(e){return e&&typeof e.type=="string"&&typeof e.professor=="string"&&this.isValidTime(e.startTime)&&this.isValidTime(e.endTime)&&typeof e.location=="string"&&typeof e.building=="string"&&typeof e.room=="string"&&typeof e.seats=="number"&&typeof e.seatsAvailable=="number"&&typeof e.actualWaitlist=="number"&&typeof e.maxWaitlist=="number"&&e.days instanceof Set}static isValidTime(e){return e&&typeof e.hours=="number"&&typeof e.minutes=="number"&&typeof e.displayTime=="string"&&e.hours>=0&&e.hours<=23&&e.minutes>=0&&e.minutes<=59}static isValidSchedulePreferences(e){return e&&this.isValidTimeRange(e.preferredTimeRange)&&e.preferredDays instanceof Set&&typeof e.avoidBackToBackClasses=="boolean"}static isValidTimeRange(e){return e&&this.isValidTime(e.startTime)&&this.isValidTime(e.endTime)}static isValidSelectedCourse(e){return e&&this.isValidCourse(e.course)&&typeof e.isRequired=="boolean"}static isValidSchedule(e){return e&&typeof e.id=="string"&&typeof e.name=="string"&&Array.isArray(e.selectedCourses)&&e.selectedCourses.every(t=>this.isValidSelectedCourse(t))&&Array.isArray(e.generatedSchedules)&&this.isValidSchedulePreferences(e.preferences)}static sanitizeString(e){return e.replace(/<[^>]*>/g,"").trim()}static sanitizeCourseData(e){try{return this.isValidCourse(e)?{...e,name:this.sanitizeString(e.name),description:this.sanitizeString(e.description),sections:e.sections.map(t=>({...t,description:this.sanitizeString(t.description),periods:t.periods.map(s=>({...s,professor:this.sanitizeString(s.professor),location:this.sanitizeString(s.location),building:this.sanitizeString(s.building),room:this.sanitizeString(s.room)}))}))}:null}catch(t){return console.warn("Error sanitizing course data:",t),null}}static validateCourseId(e){return/^[A-Z]{2,4}-\d{3,4}$/.test(e)}static validateSectionNumber(e){return/^[A-Z0-9]+$/.test(e)}static validateEmail(e){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e)}}class he{constructor(e,t){this.courseManager=e||new ue,this.storageManager=t||new L,this.loadPersistedSelections(),this.setupPersistenceListener()}selectCourse(e,t=!1){if(!T.isValidCourse(e))throw new Error("Invalid course object provided");this.courseManager.addCourse(e,t)}unselectCourse(e){if(!e||!T.validateCourseId(e))throw new Error("Invalid courseId provided");this.courseManager.removeCourse(e)}toggleCourseSelection(e,t=!1){return this.isCourseSelected(e.id)?(this.unselectCourse(e.id),!1):(this.selectCourse(e,t),!0)}setSelectedSection(e,t){if(!e||!T.validateCourseId(e))throw new Error("Invalid courseId provided");if(t!==null&&!T.validateSectionNumber(t))throw new Error("Invalid sectionNumber provided");this.courseManager.setSelectedSection(e,t)}getSelectedSection(e){if(!e||!T.validateCourseId(e))throw new Error("Invalid courseId provided");return this.courseManager.getSelectedSection(e)}isCourseSelected(e){return!e||!T.validateCourseId(e)?!1:this.courseManager.isSelected(e)}getSelectedCourses(){return this.courseManager.getSelectedCourses()}getSelectedCourse(e){if(!(!e||!T.validateCourseId(e)))return this.courseManager.getSelectedCourse(e)}clearAllSelections(){this.courseManager.clearAll(),this.storageManager.clearSelectedCourses()}getSelectedCoursesCount(){return this.getSelectedCourses().length}getSelectedCourseIds(){return this.getSelectedCourses().map(e=>e.course.id)}onSelectionChange(e){this.courseManager.onSelectionChange(e)}offSelectionChange(e){this.courseManager.offSelectionChange(e)}loadPersistedSelections(){const e=this.storageManager.loadSelectedCourses();e.length>0&&this.courseManager.loadSelectedCourses(e)}setupPersistenceListener(){this.courseManager.onSelectionChange(e=>{this.storageManager.saveSelectedCourses(e)})}persistSelections(){const e=this.getSelectedCourses();this.storageManager.saveSelectedCourses(e)}exportSelections(){const e=this.getSelectedCourses();return JSON.stringify({version:"1.0",timestamp:new Date().toISOString(),selectedCourses:e},null,2)}importSelections(e){try{const t=JSON.parse(e);return t.selectedCourses&&Array.isArray(t.selectedCourses)?(this.courseManager.loadSelectedCourses(t.selectedCourses),!0):!1}catch(t){return console.error("Failed to import selections:",t),!1}}}var R=(u=>(u.TIME_OVERLAP="time_overlap",u))(R||{});class me{constructor(){this.conflictCache=new Map}detectConflicts(e){const t=[];for(let s=0;s<e.length;s++)for(let r=s+1;r<e.length;r++){const i=this.getCacheKey(e[s],e[r]);let n=this.conflictCache.get(i);n||(n=this.checkSectionConflicts(e[s],e[r]),this.conflictCache.set(i,n)),t.push(...n)}return t}checkSectionConflicts(e,t){const s=[];for(const r of e.periods)for(const i of t.periods){const n=this.checkPeriodConflict(r,i,e,t);n&&s.push(n)}return s}checkPeriodConflict(e,t,s,r){const i=this.getSharedDays(e.days,t.days);return i.length===0?null:this.hasTimeOverlap(e,t)?{section1:s,section2:r,conflictType:R.TIME_OVERLAP,description:`Time overlap on ${i.join(", ")}: ${e.startTime.displayTime}-${e.endTime.displayTime} conflicts with ${t.startTime.displayTime}-${t.endTime.displayTime}`}:null}getSharedDays(e,t){return Array.from(new Set([...e].filter(s=>t.has(s))))}hasTimeOverlap(e,t){const s=this.timeToMinutes(e.startTime),r=this.timeToMinutes(e.endTime),i=this.timeToMinutes(t.startTime),n=this.timeToMinutes(t.endTime);return s<n&&i<r}timeToMinutes(e){return e.hours*60+e.minutes}isValidSchedule(e){return this.detectConflicts(e).length===0}clearCache(){this.conflictCache.clear()}getCacheKey(e,t){const s=`${e.crn}-${t.crn}`,r=`${t.crn}-${e.crn}`;return s<r?s:r}}class pe{constructor(){this.allDepartments=[],this.selectedDepartment=null,this.departmentCategories={BB:"Science",BCB:"Science",CH:"Science",CS:"Science",DS:"Science",GE:"Science",IMGD:"Science",MA:"Science",MTE:"Science",PTE:"Science",NE:"Science",PH:"Science",AE:"Engineering",AR:"Engineering",ARE:"Engineering",BME:"Engineering",CE:"Engineering",CHE:"Engineering",ECE:"Engineering",ES:"Engineering",FP:"Engineering",ME:"Engineering",MFE:"Engineering",MSE:"Engineering",NUE:"Engineering",RBE:"Engineering",SYE:"Engineering",BUS:"Business & Management",ECON:"Business & Management",MIS:"Business & Management",OIE:"Business & Management",EN:"Humanities & Arts",HI:"Humanities & Arts",HU:"Humanities & Arts",MU:"Humanities & Arts",RE:"Humanities & Arts",SP:"Humanities & Arts",TH:"Humanities & Arts",WR:"Humanities & Arts",GOV:"Social Sciences",PSY:"Social Sciences",SOC:"Social Sciences",SS:"Social Sciences"}}setAllDepartments(e){this.allDepartments=e}getSelectedDepartment(){return this.selectedDepartment}selectDepartment(e){const t=this.allDepartments.find(r=>r.abbreviation===e);if(!t)return null;this.selectedDepartment=t;const s=document.querySelector(".content-header h2");return s&&(s.textContent=`${t.name} Courses`),t}displayDepartments(){const e=document.getElementById("department-list");if(!e)return;const t=this.groupDepartmentsByCategory();let s="";Object.entries(t).forEach(([r,i])=>{i.length!==0&&(s+=`
                <div class="department-category">
                    <div class="category-header">${r}</div>
                    <div class="department-list">
            `,i.forEach(n=>{const o=n.courses.length;s+=`
                    <div class="department-item" data-dept-id="${n.abbreviation}">
                        ${n.name} (${o})
                    </div>
                `}),s+=`
                    </div>
                </div>
            `)}),e.innerHTML=s}groupDepartmentsByCategory(){const e={Science:[],Engineering:[],"Business & Management":[],"Humanities & Arts":[],"Social Sciences":[],Other:[]};return this.allDepartments.forEach(t=>{const s=this.departmentCategories[t.abbreviation]||"Other";e[s].push(t)}),Object.keys(e).forEach(t=>{e[t].sort((s,r)=>s.name.localeCompare(r.name))}),e}handleDepartmentClick(e){const t=this.selectDepartment(e);document.querySelectorAll(".department-item").forEach(r=>{r.classList.remove("active")});const s=document.querySelector(`[data-dept-id="${e}"]`);return s&&s.classList.add("active"),t}clearDepartmentSelection(){this.selectedDepartment=null,document.querySelectorAll(".department-item").forEach(e=>{e.classList.remove("active")})}}class fe{constructor(e){this.allDepartments=[],this.selectedCourse=null,this.courseSelectionService=e}setAllDepartments(e){this.allDepartments=e}getSelectedCourse(){return this.selectedCourse}displayCourses(e,t){t==="grid"?this.displayCoursesGrid(e):this.displayCoursesList(e)}displayCoursesList(e){const t=document.getElementById("course-container");if(!t)return;if(e.length===0){t.innerHTML='<div class="empty-state">No courses found in this department.</div>';return}const s=e.sort((i,n)=>i.number.localeCompare(n.number));let r='<div class="course-list">';s.forEach(i=>{const n=this.courseHasWarning(i),o=i.sections.map(l=>l.number).filter(Boolean),a=this.courseSelectionService.isCourseSelected(i.id);r+=`
                <div class="course-item ${a?"selected":""}" data-course-id="${i.id}">
                    <div class="course-header">
                        <button class="course-select-btn ${a?"selected":""}" data-course-id="${i.id}" title="${a?"Remove from selection":"Add to selection"}">
                            ${a?"✓":"+"}
                        </button>
                        <div class="course-code">${i.department.abbreviation}${i.number}</div>
                        <div class="course-details">
                            <div class="course-name">
                                ${i.name}
                                ${n?'<span class="warning-icon">⚠</span>':""}
                            </div>
                            <div class="course-sections">
                                ${o.map(l=>`<span class="section-badge" data-section="${l}">${l}</span>`).join("")}
                            </div>
                        </div>
                    </div>
                </div>
            `}),r+="</div>",t.innerHTML=r}displayCoursesGrid(e){const t=document.getElementById("course-container");if(!t)return;if(e.length===0){t.innerHTML='<div class="empty-state">No courses found in this department.</div>';return}const s=e.sort((i,n)=>i.number.localeCompare(n.number));let r='<div class="course-grid">';s.forEach(i=>{const n=this.courseHasWarning(i),o=this.courseSelectionService.isCourseSelected(i.id),a=i.minCredits===i.maxCredits?i.minCredits:`${i.minCredits}-${i.maxCredits}`;r+=`
                <div class="course-card ${o?"selected":""}" data-course-id="${i.id}">
                    <div class="course-card-header">
                        <div class="course-code">${i.department.abbreviation}${i.number}</div>
                        <button class="course-select-btn ${o?"selected":""}" data-course-id="${i.id}" title="${o?"Remove from selection":"Add to selection"}">
                            ${o?"✓":"+"}
                        </button>
                    </div>
                    <div class="course-title">
                        ${i.name}
                        ${n?'<span class="warning-icon">⚠</span>':""}
                    </div>
                    <div class="course-info">
                        <span class="course-credits">${a} credits</span>
                        <span class="course-sections-count">${i.sections.length} section${i.sections.length!==1?"s":""}</span>
                    </div>
                </div>
            `}),r+="</div>",t.innerHTML=r}courseHasWarning(e){return e.sections.every(t=>t.seatsAvailable<=0)}handleSearch(e,t){if(!e.trim())return t?t.courses:[];const s=[];this.allDepartments.forEach(n=>{s.push(...n.courses)});const r=s.filter(n=>n.name.toLowerCase().includes(e.toLowerCase())||n.number.toLowerCase().includes(e.toLowerCase())||n.id.toLowerCase().includes(e.toLowerCase())),i=document.querySelector(".content-header h2");return i&&(i.textContent=`Search Results (${r.length})`),r}selectCourse(e){let t=null;for(const r of this.allDepartments)if(t=r.courses.find(i=>i.id===e)||null,t)break;if(!t)return null;this.selectedCourse=t,this.displayCourseDescription(t),document.querySelectorAll(".course-item").forEach(r=>{r.classList.remove("active")});const s=document.querySelector(`[data-course-id="${e}"]`);return s&&s.classList.add("active"),t}toggleCourseSelection(e){let t=null;for(const r of this.allDepartments)if(t=r.courses.find(i=>i.id===e)||null,t)break;if(!t)return!1;const s=this.courseSelectionService.toggleCourseSelection(t);return this.updateCourseSelectionUI(e,s),s}updateCourseSelectionUI(e,t){const s=document.querySelector(`[data-course-id="${e}"]`),r=s?.querySelector(".course-select-btn");s&&r&&(t?(s.classList.add("selected"),r.textContent="✓",r.classList.add("selected")):(s.classList.remove("selected"),r.textContent="+",r.classList.remove("selected")))}refreshCourseSelectionUI(){document.querySelectorAll(".course-item").forEach(e=>{const t=e.dataset.courseId;if(t){const s=this.courseSelectionService.isCourseSelected(t);this.updateCourseSelectionUI(t,s)}})}displayCourseDescription(e){const t=document.getElementById("course-description");if(!t)return;const s=`
            <div class="course-info">
                <div class="course-title">${e.name}</div>
                <div class="course-code">${e.department.abbreviation}${e.number} (${e.minCredits===e.maxCredits?e.minCredits:`${e.minCredits}-${e.maxCredits}`} credits)</div>
            </div>
            <div class="course-description-text">${e.description}</div>
        `;t.innerHTML=s}clearCourseDescription(){const e=document.getElementById("course-description");e&&(e.innerHTML='<div class="empty-state">Select a course to view description</div>')}clearCourseSelection(){this.selectedCourse=null,this.clearCourseDescription()}displaySelectedCourses(){const e=document.getElementById("selected-courses-list"),t=document.getElementById("selected-count");if(!e||!t)return;const s=this.courseSelectionService.getSelectedCourses();if(t.textContent=`(${s.length})`,s.length===0){e.innerHTML='<div class="empty-state">No courses selected yet</div>';return}const r=s.sort((n,o)=>{const a=n.course.department.abbreviation.localeCompare(o.course.department.abbreviation);return a!==0?a:n.course.number.localeCompare(o.course.number)});let i="";r.forEach(n=>{const o=n.course,a=o.minCredits===o.maxCredits?`${o.minCredits} credits`:`${o.minCredits}-${o.maxCredits} credits`;i+=`
                <div class="selected-course-item" data-course-id="${o.id}">
                    <div class="selected-course-info">
                        <div class="selected-course-code">${o.department.abbreviation}${o.number}</div>
                        <div class="selected-course-name">${o.name}</div>
                        <div class="selected-course-credits">${a}</div>
                    </div>
                    <button class="course-remove-btn" data-course-id="${o.id}" title="Remove from selection">
                        ×
                    </button>
                </div>
            `}),e.innerHTML=i}}const d=class d{static timeToGridRow(e){const t=e.hours*60+e.minutes,s=d.START_HOUR*60,r=t-s,i=Math.floor(r/30);return Math.max(0,Math.min(i,d.TOTAL_TIME_SLOTS-1))}static dayToGridColumn(e){return d.DAYS_ORDER.indexOf(e)}static calculateDuration(e,t){const s=d.timeToGridRow(e),r=d.timeToGridRow(t);return Math.max(1,r-s)}static isTimeInBounds(e){return e.hours>=d.START_HOUR&&e.hours<d.END_HOUR}static formatTime(e){if(e.displayTime)return e.displayTime;const t=e.hours===0?12:e.hours>12?e.hours-12:e.hours,s=e.hours>=12?"PM":"AM",r=e.minutes.toString().padStart(2,"0");return`${t}:${r} ${s}`}static formatTimeRange(e,t){const s=d.formatTime(e),r=d.formatTime(t);return e.hours<12&&t.hours<12?`${s.replace(" AM","")}-${r}`:e.hours>=12&&t.hours>=12?`${s.replace(" PM","")}-${r}`:`${s}-${r}`}static formatDays(e){const t={[c.MONDAY]:"M",[c.TUESDAY]:"T",[c.WEDNESDAY]:"W",[c.THURSDAY]:"R",[c.FRIDAY]:"F",[c.SATURDAY]:"S",[c.SUNDAY]:"U"};return d.DAYS_ORDER.filter(s=>e.has(s)).map(s=>t[s]).join("")}static generateTimeLabels(){const e=[];for(let t=d.START_HOUR;t<d.END_HOUR;t++)e.push(d.formatTime({hours:t,minutes:0,displayTime:""})),e.push(d.formatTime({hours:t,minutes:30,displayTime:""}));return e}static getDayName(e){return{[c.MONDAY]:"Monday",[c.TUESDAY]:"Tuesday",[c.WEDNESDAY]:"Wednesday",[c.THURSDAY]:"Thursday",[c.FRIDAY]:"Friday",[c.SATURDAY]:"Saturday",[c.SUNDAY]:"Sunday"}[e]}static getDayAbbr(e){return{[c.MONDAY]:"Mon",[c.TUESDAY]:"Tue",[c.WEDNESDAY]:"Wed",[c.THURSDAY]:"Thu",[c.FRIDAY]:"Fri",[c.SATURDAY]:"Sat",[c.SUNDAY]:"Sun"}[e]}};d.START_HOUR=7,d.END_HOUR=19,d.TOTAL_HOURS=12,d.SLOTS_PER_HOUR=2,d.TOTAL_TIME_SLOTS=d.TOTAL_HOURS*d.SLOTS_PER_HOUR,d.DAYS_ORDER=[c.MONDAY,c.TUESDAY,c.WEDNESDAY,c.THURSDAY,c.FRIDAY,c.SATURDAY,c.SUNDAY];let f=d;class ge{constructor(e){this.courseSelectionService=e}setStatePreserver(e){this.statePreserver=e}displayScheduleSelectedCourses(){const e=document.getElementById("schedule-selected-courses"),t=document.getElementById("schedule-selected-count");if(!e||!t)return;const s=this.statePreserver?.preserve(),r=this.courseSelectionService.getSelectedCourses();if(t.textContent=`(${r.length})`,r.length===0){e.innerHTML='<div class="empty-state">No courses selected yet</div>';return}const i=r.sort((o,a)=>{const l=o.course.department.abbreviation.localeCompare(a.course.department.abbreviation);return l!==0?l:o.course.number.localeCompare(a.course.number)});let n="";i.forEach(o=>{const a=o.course,l=a.minCredits===a.maxCredits?`${a.minCredits} credits`:`${a.minCredits}-${a.maxCredits} credits`,p={};a.sections.forEach(h=>{p[h.term]||(p[h.term]=[]),p[h.term].push(h)}),n+=`
                <div class="schedule-course-item collapsed" data-course-id="${a.id}">
                    <div class="schedule-course-header dropdown-trigger" data-course-id="${a.id}">
                        <div class="schedule-course-info">
                            <div class="schedule-course-code">${a.department.abbreviation}${a.number}</div>
                            <div class="schedule-course-name">${a.name}</div>
                            <div class="schedule-course-credits">${l}</div>
                        </div>
                        <div class="header-controls">
                            <span class="dropdown-arrow">▼</span>
                            <button class="course-remove-btn" data-course-id="${a.id}" title="Remove from selection">
                                ×
                            </button>
                        </div>
                    </div>
                    <div class="schedule-sections-container">
            `,Object.keys(p).sort().forEach(h=>{n+=`<div class="term-sections" data-term="${h}">`,n+=`<div class="term-label">${h} Term</div>`,p[h].forEach(v=>{const y=o.selectedSection===v.number,b=y?"selected":"",A=[...v.periods].sort((g,O)=>{const D=$=>{const E=$.toLowerCase();return E.includes("lec")||E.includes("lecture")?1:E.includes("lab")?2:E.includes("dis")||E.includes("discussion")||E.includes("rec")?3:4};return D(g.type)-D(O.type)});n+=`
                        <div class="section-option ${b}" data-course-id="${a.id}" data-section="${v.number}">
                            <div class="section-info">
                                <div class="section-number">${v.number}</div>
                                <div class="section-periods">`,A.forEach((g,O)=>{const D=f.formatTimeRange(g.startTime,g.endTime),$=f.formatDays(g.days),E=this.getPeriodTypeLabel(g.type);n+=`
                            <div class="period-info" data-period-type="${g.type.toLowerCase()}">
                                <div class="period-header">
                                    <span class="period-type-label">${E}</span>
                                    <span class="period-schedule">${$} ${D}</span>
                                </div>
                                <div class="period-details">
                                    <span class="period-professor">${g.professor}</span>
                                    ${g.location?`<span class="period-location">${g.location}</span>`:""}
                                </div>
                            </div>
                        `}),n+=`
                                </div>
                            </div>
                            <button class="section-select-btn ${b}" data-course-id="${a.id}" data-section="${v.number}">
                                ${y?"✓":"+"}
                            </button>
                        </div>
                    `}),n+="</div>"}),n+=`
                    </div>
                </div>
            `}),e.innerHTML=n,s&&setTimeout(()=>{this.statePreserver?.restore(s)},0)}handleSectionSelection(e,t){this.courseSelectionService.getSelectedSection(e)===t?this.courseSelectionService.setSelectedSection(e,null):this.courseSelectionService.setSelectedSection(e,t)}updateSectionButtonStates(e,t){const s=document.querySelector(`.schedule-course-item[data-course-id="${e}"]`);if(!s)return;const r=s.querySelectorAll(".section-select-btn"),i=s.querySelectorAll(".section-option");r.forEach(n=>{n.dataset.section===t?(n.classList.add("selected"),n.textContent="✓"):(n.classList.remove("selected"),n.textContent="+")}),i.forEach(n=>{n.dataset.section===t?n.classList.add("selected"):n.classList.remove("selected")})}renderScheduleGrids(){const e=this.courseSelectionService.getSelectedCourses();["A","B","C","D"].forEach(s=>{const r=document.getElementById(`schedule-grid-${s}`);if(!r)return;const i=e.filter(n=>n.selectedSection&&n.course.sections.some(o=>o.number===n.selectedSection&&o.term.toUpperCase().includes(s)));if(i.length===0){this.renderEmptyGrid(r,s);return}this.renderPopulatedGrid(r,i,s)})}renderEmptyGrid(e,t){e.innerHTML=`
            <div class="empty-schedule">
                <div class="empty-message">No classes scheduled for ${t} term</div>
            </div>
        `,e.classList.add("empty")}renderPopulatedGrid(e,t,s){e.classList.remove("empty");const r=[c.MONDAY,c.TUESDAY,c.WEDNESDAY,c.THURSDAY,c.FRIDAY],i=f.TOTAL_TIME_SLOTS;let n=`
            <div class="schedule-grid-header">
                <div class="time-column-header"></div>
                ${r.map(o=>`
                    <div class="day-header">${f.getDayAbbr(o)}</div>
                `).join("")}
            </div>
            <div class="schedule-grid-body">
        `;for(let o=0;o<i;o++){const a=Math.floor(o/2)+f.START_HOUR,l=o%2*30,p=o%2===0?f.formatTime({hours:a,minutes:l,displayTime:""}):"";n+=`
                <div class="schedule-row">
                    <div class="time-label">${p}</div>
                    ${r.map(C=>{const h=this.getCellContent(t,C,o);return`<div class="schedule-cell ${h.classes}" data-day="${C}" data-slot="${o}">${h.content}</div>`}).join("")}
                </div>
            `}n+="</div>",e.innerHTML=n}getCellContent(e,t,s){const r=[];for(const h of e){if(!h.selectedSection)continue;const v=h.course.sections.find(y=>y.number===h.selectedSection);if(v)for(const y of v.periods){if(!y.days.has(t))continue;const b=f.timeToGridRow(y.startTime),A=f.timeToGridRow(y.endTime);s>=b&&s<A&&r.push({course:h,section:v,period:y,startSlot:b,endSlot:A,isFirstSlot:s===b})}}if(r.length===0)return{content:"",classes:""};const i=r.length>1,n=r[0],o=this.getCourseColor(n.course.course.id),a=this.getPeriodTypeClass(n.period.type),l=this.getPeriodTypeLabel(n.period.type),p=n.isFirstSlot?`
            <div class="course-block ${a} ${i?"conflict":""}" style="background-color: ${o}">
                <div class="course-header">
                    <div class="course-title">${n.course.course.department.abbreviation}${n.course.course.number}</div>
                    <div class="period-type-badge">${l}</div>
                </div>
                <div class="course-time">${f.formatTimeRange(n.period.startTime,n.period.endTime)}</div>
                <div class="course-location">${n.period.location}</div>
                <div class="course-professor">${n.period.professor}</div>
                ${i?'<div class="conflict-indicator">⚠ Conflict</div>':""}
            </div>
        `:`<div class="course-continuation ${a} ${i?"conflict":""}"></div>`,C=`occupied ${n.isFirstSlot?"course-start":"course-continuation"} ${i?"has-conflict":""}`;return{content:p,classes:C}}getCourseColor(e){const t=["#4CAF50","#2196F3","#FF9800","#9C27B0","#F44336","#00BCD4","#795548","#607D8B","#3F51B5","#E91E63"];let s=0;for(let r=0;r<e.length;r++)s=e.charCodeAt(r)+((s<<5)-s);return t[Math.abs(s)%t.length]}getPeriodTypeLabel(e){const t=e.toLowerCase();return t.includes("lec")||t.includes("lecture")?"LEC":t.includes("lab")?"LAB":t.includes("dis")||t.includes("discussion")?"DIS":t.includes("rec")||t.includes("recitation")?"REC":t.includes("sem")||t.includes("seminar")?"SEM":t.includes("studio")?"STU":t.includes("conference")||t.includes("conf")?"CONF":e.substring(0,Math.min(4,e.length)).toUpperCase()}getPeriodTypeClass(e){const t=e.toLowerCase();return t.includes("lec")||t.includes("lecture")?"period-lecture":t.includes("lab")?"period-lab":t.includes("dis")||t.includes("discussion")?"period-discussion":t.includes("rec")||t.includes("recitation")?"period-recitation":t.includes("sem")||t.includes("seminar")?"period-seminar":t.includes("studio")?"period-studio":t.includes("conference")||t.includes("conf")?"period-conference":"period-other"}}class Se{constructor(){this.currentView="list",this.currentPage="planner"}setView(e){this.currentView=e;const t=document.getElementById("view-list"),s=document.getElementById("view-grid");t&&s&&(e==="list"?(t.classList.add("btn-primary","active"),t.classList.remove("btn-secondary"),s.classList.add("btn-secondary"),s.classList.remove("btn-primary","active")):(s.classList.add("btn-primary","active"),s.classList.remove("btn-secondary"),t.classList.add("btn-secondary"),t.classList.remove("btn-primary","active")))}togglePage(){const e=this.currentPage==="planner"?"schedule":"planner";this.switchToPage(e)}switchToPage(e){if(e===this.currentPage)return;this.currentPage=e;const t=document.getElementById("schedule-btn");t&&(e==="schedule"?(t.textContent="Back to Classes",this.showSchedulePage()):(t.textContent="Schedule",this.showPlannerPage()))}showPlannerPage(){const e=document.getElementById("planner-page"),t=document.getElementById("schedule-page");e&&(e.style.display="grid"),t&&(t.style.display="none")}showSchedulePage(){const e=document.getElementById("planner-page"),t=document.getElementById("schedule-page");e&&(e.style.display="none"),t&&(t.style.display="flex")}showLoadingState(){const e=document.getElementById("department-list");e&&(e.innerHTML='<div class="loading-message">Loading departments...</div>')}showErrorMessage(e){const t=document.getElementById("department-list");t&&(t.innerHTML=`<div class="error-message">${e}</div>`);const s=document.getElementById("course-container");s&&(s.innerHTML=`<div class="error-message">${e}</div>`)}syncHeaderHeights(){const e=document.querySelector(".sidebar-header"),t=document.querySelector(".content-header"),s=document.querySelectorAll(".panel-header");!e||!t||!s.length||(document.documentElement.style.setProperty("--synced-header-height","auto"),requestAnimationFrame(()=>{const r=e.offsetHeight,i=t.offsetHeight,n=Array.from(s).map(a=>a.offsetHeight),o=Math.max(r,i,...n);document.documentElement.style.setProperty("--synced-header-height",`${o}px`)}))}setupHeaderResizeObserver(){if(!window.ResizeObserver)return;const e=[document.querySelector(".sidebar-header"),document.querySelector(".content-header"),...document.querySelectorAll(".panel-header")].filter(Boolean);if(!e.length)return;const t=new ResizeObserver(()=>{this.syncHeaderHeights()});e.forEach(s=>{t.observe(s)})}}class Ce{constructor(){}updateClientTimestamp(){const e=document.getElementById("client-timestamp");if(e){const t=new Date,s={month:"short",day:"numeric",year:"numeric",hour:"numeric",minute:"2-digit",second:"2-digit",hour12:!0},r=t.toLocaleDateString("en-US",s).replace(","," at");e.textContent=`Client loaded: ${r}`}}async loadServerTimestamp(){const e=document.getElementById("server-timestamp");if(e)try{const t=await fetch("./last-updated.json",{cache:"no-cache"});if(t.ok){const s=await t.json(),r=new Date(s.timestamp),i={month:"short",day:"numeric",year:"numeric",hour:"numeric",minute:"2-digit",second:"2-digit",hour12:!0},n=r.toLocaleDateString("en-US",i).replace(","," at");e.textContent=`Server updated: ${n}`}else throw new Error(`Failed to fetch server timestamp: ${t.status}`)}catch(t){console.warn("Failed to load server timestamp:",t),e.textContent="Server timestamp unavailable"}}}class ve{constructor(){this.allDepartments=[],this.previousSelectedCoursesCount=0,this.previousSelectedCoursesMap=new Map,this.courseDataService=new M,this.themeSelector=new de,this.courseSelectionService=new he,this.conflictDetector=new me,this.departmentController=new pe,this.courseController=new fe(this.courseSelectionService),this.scheduleController=new ge(this.courseSelectionService),this.uiStateManager=new Se,this.timestampManager=new Ce,this.scheduleController.setStatePreserver({preserve:()=>this.preserveDropdownStates(),restore:t=>this.restoreDropdownStates(t)});const e=this.courseSelectionService.getSelectedCourses();this.previousSelectedCoursesCount=e.length,this.previousSelectedCoursesMap=new Map,e.forEach(t=>{this.previousSelectedCoursesMap.set(t.course.id,t.selectedSection)}),this.init()}async init(){this.uiStateManager.showLoadingState(),await this.loadCourseData(),this.departmentController.displayDepartments(),this.setupEventListeners(),this.setupCourseSelectionListener(),this.courseController.displaySelectedCourses(),this.uiStateManager.syncHeaderHeights(),this.uiStateManager.setupHeaderResizeObserver()}async loadCourseData(){try{console.log("Loading course data...");const e=await this.courseDataService.loadCourseData();this.allDepartments=e.departments,this.departmentController.setAllDepartments(this.allDepartments),this.courseController.setAllDepartments(this.allDepartments),console.log(`Loaded ${this.allDepartments.length} departments`),this.timestampManager.updateClientTimestamp(),this.timestampManager.loadServerTimestamp()}catch(e){console.error("Failed to load course data:",e),this.uiStateManager.showErrorMessage("Failed to load course data. Please try refreshing the page.")}}setupEventListeners(){document.addEventListener("click",n=>{const o=n.target;if(o.classList.contains("department-item")){const a=o.dataset.deptId;if(a){const l=this.departmentController.handleDepartmentClick(a);l&&this.courseController.displayCourses(l.courses,this.uiStateManager.currentView)}}if(o.classList.contains("section-badge")&&o.classList.toggle("selected"),o.classList.contains("course-select-btn")){const a=o.dataset.courseId;a&&this.courseController.toggleCourseSelection(a)}if(o.classList.contains("course-remove-btn")){const a=o.dataset.courseId;a&&this.courseSelectionService.unselectCourse(a)}if(o.classList.contains("section-select-btn")){n.stopPropagation();const a=o.dataset.courseId,l=o.dataset.section;a&&l&&this.scheduleController.handleSectionSelection(a,l);return}if(o.classList.contains("section-option")||o.closest(".section-option")||o.classList.contains("section-info")||o.closest(".section-info")||o.classList.contains("section-number")||o.classList.contains("section-schedule")||o.classList.contains("section-professor")){n.stopPropagation(),n.preventDefault();return}if(o.classList.contains("dropdown-trigger")||o.closest(".dropdown-trigger")){const a=o.classList.contains("dropdown-trigger")?o:o.closest(".dropdown-trigger");a&&!o.classList.contains("course-remove-btn")&&!o.classList.contains("section-select-btn")&&!o.classList.contains("section-number")&&!o.classList.contains("section-schedule")&&!o.classList.contains("section-professor")&&!o.closest(".section-option")&&!o.closest(".section-info")&&!o.closest(".schedule-sections-container")&&this.toggleCourseDropdown(a)}if(o.closest(".course-item")&&!o.classList.contains("course-select-btn")&&!o.classList.contains("section-badge")){const l=o.closest(".course-item").dataset.courseId;l&&this.courseController.selectCourse(l)}});const e=document.getElementById("search-input");e&&e.addEventListener("input",()=>{const n=this.courseController.handleSearch(e.value,this.departmentController.getSelectedDepartment());this.courseController.displayCourses(n,this.uiStateManager.currentView)});const t=document.getElementById("clear-selection");t&&t.addEventListener("click",()=>{this.clearSelection()});const s=document.getElementById("schedule-btn");s&&s.addEventListener("click",()=>{this.uiStateManager.togglePage(),this.uiStateManager.currentPage==="schedule"&&(this.scheduleController.displayScheduleSelectedCourses(),this.scheduleController.renderScheduleGrids())});const r=document.getElementById("view-list"),i=document.getElementById("view-grid");r&&r.addEventListener("click",()=>{this.uiStateManager.setView("list"),this.refreshCurrentView()}),i&&i.addEventListener("click",()=>{this.uiStateManager.setView("grid"),this.refreshCurrentView()})}refreshCurrentView(){const e=this.departmentController.getSelectedDepartment();if(e)this.courseController.displayCourses(e.courses,this.uiStateManager.currentView);else{const t=document.getElementById("search-input");if(t?.value.trim()){const s=this.courseController.handleSearch(t.value,null);this.courseController.displayCourses(s,this.uiStateManager.currentView)}}}clearSelection(){document.querySelectorAll(".section-badge.selected").forEach(r=>{r.classList.remove("selected")});const e=document.getElementById("search-input");e&&(e.value="");const t=document.getElementById("course-container");t&&(t.innerHTML='<div class="loading-message">Select a department to view courses...</div>');const s=document.querySelector(".content-header h2");s&&(s.textContent="Course Listings"),this.departmentController.clearDepartmentSelection(),this.courseController.clearCourseSelection(),this.courseController.displaySelectedCourses()}setupCourseSelectionListener(){this.courseSelectionService.onSelectionChange(e=>{const t=e.length,s=t!==this.previousSelectedCoursesCount,r=new Map;if(e.forEach(i=>{r.set(i.course.id,i.selectedSection)}),this.courseController.refreshCourseSelectionUI(),this.courseController.displaySelectedCourses(),s)this.scheduleController.displayScheduleSelectedCourses();else{let i=!1;for(const[n,o]of r)this.previousSelectedCoursesMap.get(n)!==o&&(i=!0,this.scheduleController.updateSectionButtonStates(n,o));i&&this.uiStateManager.currentPage==="schedule"&&this.scheduleController.renderScheduleGrids()}this.previousSelectedCoursesCount=t,this.previousSelectedCoursesMap=new Map(r)})}getSelectedCourses(){return this.courseSelectionService.getSelectedCourses()}getSelectedCoursesCount(){return this.courseSelectionService.getSelectedCoursesCount()}getCourseSelectionService(){return this.courseSelectionService}toggleCourseDropdown(e){const t=e.closest(".schedule-course-item");if(!t)return;t.classList.contains("collapsed")?(t.classList.remove("collapsed"),t.classList.add("expanded")):(t.classList.remove("expanded"),t.classList.add("collapsed"))}preserveDropdownStates(){const e=new Map;return document.querySelectorAll(".schedule-course-item").forEach(t=>{const s=t.dataset.courseId;if(s){const r=t.classList.contains("expanded");e.set(s,r)}}),e}restoreDropdownStates(e){document.querySelectorAll(".schedule-course-item").forEach(t=>{const s=t.dataset.courseId;s&&e.has(s)&&(e.get(s)?(t.classList.remove("collapsed"),t.classList.add("expanded")):(t.classList.remove("expanded"),t.classList.add("collapsed")))})}}new ve;
//# sourceMappingURL=index-BdhXPgbt.js.map
